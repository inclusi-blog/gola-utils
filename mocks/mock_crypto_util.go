// Code generated by MockGen. DO NOT EDIT.
// Source: crypto/crypto_util.go

// Package mocks is a generated GoMock package.
package mocks

import (
	gin "github.com/gin-gonic/gin"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockCryptoUtil is a mock of CryptoUtil interface
type MockCryptoUtil struct {
	ctrl     *gomock.Controller
	recorder *MockCryptoUtilMockRecorder
}

// MockCryptoUtilMockRecorder is the mock recorder for MockCryptoUtil
type MockCryptoUtilMockRecorder struct {
	mock *MockCryptoUtil
}

// NewMockCryptoUtil creates a new mock instance
func NewMockCryptoUtil(ctrl *gomock.Controller) *MockCryptoUtil {
	mock := &MockCryptoUtil{ctrl: ctrl}
	mock.recorder = &MockCryptoUtilMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockCryptoUtil) EXPECT() *MockCryptoUtilMockRecorder {
	return m.recorder
}

// Decipher mocks base method
func (m *MockCryptoUtil) Decipher(ctx *gin.Context, encryptedText string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Decipher", ctx, encryptedText)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Decipher indicates an expected call of Decipher
func (mr *MockCryptoUtilMockRecorder) Decipher(ctx, encryptedText interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Decipher", reflect.TypeOf((*MockCryptoUtil)(nil).Decipher), ctx, encryptedText)
}
