// Code generated by MockGen. DO NOT EDIT.
// Source: introspection_request_builder.go

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	http "net/http"
	reflect "reflect"
)

// MockIntrospectionRequestBuilder is a mock of IntrospectionRequestBuilder interface
type MockIntrospectionRequestBuilder struct {
	ctrl     *gomock.Controller
	recorder *MockIntrospectionRequestBuilderMockRecorder
}

// MockIntrospectionRequestBuilderMockRecorder is the mock recorder for MockIntrospectionRequestBuilder
type MockIntrospectionRequestBuilderMockRecorder struct {
	mock *MockIntrospectionRequestBuilder
}

// NewMockIntrospectionRequestBuilder creates a new mock instance
func NewMockIntrospectionRequestBuilder(ctrl *gomock.Controller) *MockIntrospectionRequestBuilder {
	mock := &MockIntrospectionRequestBuilder{ctrl: ctrl}
	mock.recorder = &MockIntrospectionRequestBuilderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIntrospectionRequestBuilder) EXPECT() *MockIntrospectionRequestBuilderMockRecorder {
	return m.recorder
}

// Build mocks base method
func (m *MockIntrospectionRequestBuilder) Build(hydraAdminBaseUrl, accessToken string) (*http.Request, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Build", hydraAdminBaseUrl, accessToken)
	ret0, _ := ret[0].(*http.Request)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Build indicates an expected call of Build
func (mr *MockIntrospectionRequestBuilderMockRecorder) Build(hydraAdminBaseUrl, accessToken interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Build", reflect.TypeOf((*MockIntrospectionRequestBuilder)(nil).Build), hydraAdminBaseUrl, accessToken)
}
