// Code generated by MockGen. DO NOT EDIT.
// Source: introspection_http_client.go

// Package mocks is a generated GoMock package.
package mocks

import (
	gin "github.com/gin-gonic/gin"
	gomock "github.com/golang/mock/gomock"
	http "net/http"
	reflect "reflect"
)

// MockIntrospectionHttpClient is a mock of IntrospectionHttpClient interface
type MockIntrospectionHttpClient struct {
	ctrl     *gomock.Controller
	recorder *MockIntrospectionHttpClientMockRecorder
}

// MockIntrospectionHttpClientMockRecorder is the mock recorder for MockIntrospectionHttpClient
type MockIntrospectionHttpClientMockRecorder struct {
	mock *MockIntrospectionHttpClient
}

// NewMockIntrospectionHttpClient creates a new mock instance
func NewMockIntrospectionHttpClient(ctrl *gomock.Controller) *MockIntrospectionHttpClient {
	mock := &MockIntrospectionHttpClient{ctrl: ctrl}
	mock.recorder = &MockIntrospectionHttpClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIntrospectionHttpClient) EXPECT() *MockIntrospectionHttpClientMockRecorder {
	return m.recorder
}

// Introspect mocks base method
func (m *MockIntrospectionHttpClient) Introspect(context *gin.Context, request *http.Request) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Introspect", context, request)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Introspect indicates an expected call of Introspect
func (mr *MockIntrospectionHttpClientMockRecorder) Introspect(context, request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Introspect", reflect.TypeOf((*MockIntrospectionHttpClient)(nil).Introspect), context, request)
}
